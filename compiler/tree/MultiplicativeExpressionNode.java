// Stub generated by FactoryMaker

package tree;

import compiler.QType;
import parser.*;

public class MultiplicativeExpressionNode extends QNode implements QParserTreeConstants {
	public MultiplicativeExpressionNode() {
		super(JJTMULTIPLICATIVEEXPRESSION);
	}

	void initialize() {
		if (children == null)
			return;

		_type = QType.INT;

		for (int i = 1; i < this.getTokenAndNodeCount(); i += 2)
			if (getToken(i).kind == DIV)
				_type = QType.REAL;

		for (int i = 0; i < jjtGetNumChildren(); i++) {
			QType t = getChild(i)._type;
			switch (t._kind) {
			case INT:
				break;
			case REAL:
				_type = QType.REAL;
				break;
			default:
				throw new CompileException("Expected a number", getChild(i));
			}
		}
	}
}