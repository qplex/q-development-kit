// Stub generated by FactoryMaker

package tree;

import compiler.*;
import parser.*;

public class IfStatementNode extends QNode implements QParserTreeConstants {
	public IfStatementNode() {
		super(JJTIFSTATEMENT);
		Signature.getLastSignatureCreated();
	}

	void initialize() {
		if (getChild(0)._type != QType.BOOLEAN)
			throw new CompileException("Expected a boolean", getChild(0));

		_samplingDepth = getChild(1)._samplingDepth;
		_returnValueNodes = getChild(1)._returnValueNodes;
		_hasSkipBeforeSampling = getChild(1)._hasSkipBeforeSampling;

		if (jjtGetNumChildren() > 2) {
			_samplingDepth = Math.max(_samplingDepth, getChild(2)._samplingDepth);
			_hasSkipBeforeSampling |= getChild(2)._hasSkipBeforeSampling;
			_isTerminal = getChild(1)._isTerminal && getChild(2)._isTerminal;
			if (_returnValueNodes == null)
				_returnValueNodes = getChild(2)._returnValueNodes;
			else if (getChild(2)._returnValueNodes != null)
				_returnValueNodes.addAll(getChild(2)._returnValueNodes);
		}
	}
}