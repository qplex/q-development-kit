// Stub generated by FactoryMaker

package tree;

import compiler.QType;
import compiler.Qualifier;
import parser.*;

public class ReturnExpressionNode extends QNode implements QParserTreeConstants {
	public ReturnExpressionNode() {
		super(JJTRETURNEXPRESSION);
	}

	void initialize() {
		int n = jjtGetNumChildren();
		int[] a = new int[n];
		for (int i=0; i<n; i++)
			a[i] = ((ReturnExpressionElementNode) getChild(i)).jjtGetNumChildren();
		
		boolean isSimpleList = true;
		for (int i=0; i<n; i++) {
			if (a[i] != 1) {
				isSimpleList = false;
				break;
			}
		}
		
		if (isSimpleList) 
			a = new int[] {n}; 

		_type = new QType(RETURN, new Qualifier(a));
	}
}
